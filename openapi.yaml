openapi: 3.0.3
info:
  title: Chirag Auth Validator API
  version: '1.0.3'
  description: |
    A Node.js/Express-based API for user authentication, OTP-based verification, 
    password reset, and protected routes.

    **NPM-Package**  

    - You can use it as an npm package too, just run `pnpm install @thischirag/auth`.

    - For more information, refer to the: [NPM Registry](https://www.npmjs.com/package/@thischirag/auth).

    - Or you can clone and try the repo too: [GitHub Repository](https://github.com/ThisChirag/chirag-auth-validator).

servers:
  - url: https://auth.chiragcodes.com/api
    description: Production Server

paths:
  /v1/home:
    get:
      summary: Access protected route
      description: Return a success message if the user is authenticated.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully accessed home route
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: You are in /api/home route and have successfully setup the authentication
        '401':
          description: Unauthorized, missing or invalid token.

  /v1/auth/login:
    post:
      summary: User Login
      description: Login with `email_or_username` (which can be an email address or username) and a password to receive a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_or_username:
                  type: string
                  example: your_email or user123
                  description: Email or username field (cannot be empty).
                password:
                  type: string
                  format: password
                  example: Password123!
                  description: User password (cannot be empty).
              required:
                - email_or_username
                - password
      responses:
        '200':
          description: Login successful, returns JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Login Successful, token is valid for 1 hour
                  newToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '400':
          description: Missing email_or_username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: email or username field cannot be empty
        '401':
          description: Wrong email_or_username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Wrong email_or_username or password
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: User not found
        '429':
          description: Too many requests (rate-limited)
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Too many requests, please try again later.

  /v1/auth/signup/request-otp:
    post:
      summary: Request OTP for Signup
      description: Sends an OTP to userâ€™s email for account creation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  format: email
                  example: your-email
      responses:
        '200':
          description: OTP sent to email
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Verification OTP sent to your email
        '400':
          description: Invalid email or domain
        '409':
          description: User already exists
        '429':
          description: Too many requests (rate-limited)

  /v1/auth/signup/verify-otp:
    post:
      summary: Verify OTP and create new account
      description: After receiving OTP, verify it and create a new `User`.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - otp
                - password
                - name
                - username
              properties:
                email:
                  type: string
                  format: email
                  example: your_email
                otp:
                  type: string
                  example: a1b2c3
                password:
                  type: string
                  format: password
                  example: Password123!
                name:
                  type: string
                  example: New User
                username:
                  type: string
                  example: chirag123
      responses:
        '201':
          description: Account created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email verified. Account created successfully.
        '400':
          description: Invalid or missing input (e.g., invalid OTP, email)
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Invalid or missing input
        '409':
          description: User already exists
        '401':
          description: Invalid password format
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Invalid password format
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Internal server error
        '429':
          description: Too many requests (rate-limited)
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Too many requests, please try again later.

  /v1/users/password/request-otp:
    post:
      summary: Request OTP to change password
      description: Validate old password and then send an OTP to proceed with password change.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, oldpassword]
              properties:
                email:
                  type: string
                  format: email
                  example: your_email
                oldpassword:
                  type: string
                  format: password
                  example: OldPassword123!
      responses:
        '200':
          description: OTP sent to email
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: OTP sent to your email
        '400':
          description: Missing details or incorrect old password
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Missing details or incorrect old password
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: User not found
        '429':
          description: Too many requests (rate-limited)
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Too many requests, please try again later.

  /v1/users/password/verify-otp:
    post:
      summary: Verify OTP to change password
      description: After requesting OTP for password change, verify the OTP and update the password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, otp, newpassword]
              properties:
                email:
                  type: string
                  format: email
                  example: your_email
                otp:
                  type: string
                  example: a1b2c3
                newpassword:
                  type: string
                  format: password
                  example: NewPassword123!
      responses:
        '200':
          description: Password changed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Password changed successfully
        '400':
          description: Invalid or expired OTP, or new password is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Invalid or expired OTP, or new password is invalid
        '401':
          description: Invalid password format
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Invalid password format
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: User not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Internal server error
        '429':
          description: Too many requests (rate-limited)
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Too many requests, please try again later.

  /v1/users/password/reset/request-otp:
    post:
      summary: Request OTP to reset password
      description: Sends an OTP to user's email if they forgot their password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  format: email
                  example: your_email
      responses:
        '200':
          description: OTP sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: OTP sent to your email
        '400':
          description: Invalid email or user not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Invalid email or user not found
        '429':
          description: Too many requests (rate-limited)
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Too many requests, please try again later.

  /v1/users/password/reset/verify-otp:
    post:
      summary: Verify OTP and reset password
      description: After receiving OTP via forgot password, verify OTP and reset password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, newpassword, otp]
              properties:
                email:
                  type: string
                  format: email
                  example: your_email
                otp:
                  type: string
                  example: a1b2c3
                newpassword:
                  type: string
                  format: password
                  example: NewPassword123!
      responses:
        '200':
          description: Password updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Password updated successfully
        '400':
          description: Invalid or expired OTP, or new password is invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Invalid or expired OTP, or new password is invalid
        '401':
          description: Invalid password format
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Invalid password format
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: User not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Internal server error
        '429':
          description: Too many requests (rate-limited)
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Too many requests, please try again later.

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: c8798112-66cc-4b7f-a0af-4f6d2f082022
        username:
          type: string
          example: chirag123
        email:
          type: string
          format: email
          example: your_email
        password:
          type: string
          format: password
          example: HashedPasswordString
        created_at:
          type: string
          format: date-time
          example: '2025-01-01T12:34:56Z'
      required:
        - id
        - username
        - email
        - password
        - created_at

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
